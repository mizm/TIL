#include <iostream>

using namespace std;

int n,w,h,max;
int dx[4] = {0, 1, 0, -1};
int dy[4] = { -1, 0 ,1,0};
struct xy
{
	int x;
	int y;
};
bool issafe(int x, int y)
{
	return x >= 0 && x < w && y >= 0 && y < h;
}
void boom(int tmap[][12], int ww, int hh)
{
	xy queue[10000];
	int front = -1;
	int rare = 0;
	queue[rare].x = ww;
	queue[rare].y = hh;

	while (front < rare)
	{
		front++;
		int x = queue[front].x;
		int y = queue[front].y;
		
		if (tmap[y][x] <= 1)
			tmap[y][x] = 0;
		else
		{
			int temp = tmap[y][x];
			tmap[y][x] = 0;
			for (int i = 0; i < 4; i++)
			{
				for (int j = 1; j < temp; j++)
				{
					if (issafe(x + dx[i]*j, y + dy[i]*j))
					{
						//printf("%d %d \n", x + dx[i] * j, y + dy[i] * j);
						rare++;
						queue[rare].x = x + dx[i] * j;
						queue[rare].y = y + dy[i] * j;
					}
				}
			}
		}
	}
	for (int j = 0; j < w; j++)
	{
		for (int i = h - 1; i >= 0; i--)
		{
			if (tmap[i][j] == 0)
			{
				for (int k = i; k < h-1; k++)
				{
					tmap[k][j] = tmap[k + 1][j];
				}
				tmap[h - 1][j] = 0;
			}
		}
	}
	return;

}
void check(int tmap[][12],int pos)
{

	//บนป็
	int cnt = 0;
	for (int i = h-1; i >= 0; i--)
	{
		for (int j = 0; j < w; j++)
		{
			if (tmap[i][j] == 0) cnt++;
		}
	}
	if (cnt >= h * w)
	{
		max = 0;
		return;
	}
	if (pos >= n)
	{
		/*for (int i = h-1; i >=0; i--)
		{
			for (int j = 0; j < w; j++)
			{
				printf("%d ", c_map[i][j]);
			}
			printf("\n");
		}*/
		if (h*w - cnt < max)
			max = h * w - cnt;
		return;
	}
	for (int i = 0; i < w; i++)
	{
		int p = 0;
		for (int j = h - 1; j >= -1; j--)
		{
			p = j;
			if (j == -1) break;
			if (tmap[j][i] > 0) break;
		}
		if (p > -1 && tmap[p][i] > 0)
		{
			int c_map[15][12];
			for (int i = h - 1; i >= 0; i--)
			{
				for (int j = 0; j < w; j++)
				{
					c_map[i][j] = tmap[i][j];
				}
			}
			boom(c_map, i, p);
			check(c_map, pos + 1);
		}
	}

}
int main()
{
	int test_case;
	int T;
	scanf_s("%d", &T);

	for (test_case = 1; test_case <= T; ++test_case)
	{
		scanf_s("%d %d %d", &n,&w,&h);
		int map[15][12];
		max = 15*12;
		for (int i = h-1; i >=0; i--)
			for (int j = 0; j < w; j++)
				scanf_s("%d", &map[i][j]);
		check(map, 0);
		printf("#%d %d\n",test_case,max);
		/*for (int i = h-1; i >= 0; i--)
		{
			for (int j = 0; j < w; j++)
				printf("%d ", map[i][j]);
			printf("\n");
		}*/


	}
	return 0;
}