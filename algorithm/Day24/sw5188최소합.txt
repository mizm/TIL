#include <iostream>

using namespace std;
int n, map[13][13],min_item;
int dx[2] = { 1,0 };
int dy[2] = { 0,1 };

bool issafe(int x, int y)
{
	return (x >= 0 && x < n && y >= 0 && y < n && map[y][x] > 0);
}
void dfs(int x, int y, int sum)
{
	if (x == n - 1 && y == n - 1)
	{
		sum += map[y][x];
		if (sum < min_item)
			min_item = sum;
		sum -= map[y][x];
		return;
	}
	for (int i = 0; i < 2; i++)
	{
		int x1 = x + dx[i];
		int y1 = y + dy[i];
		int tmp = map[y][x];
		sum += tmp;
		map[y][x] = -1;
		if (issafe(x1, y1))
			dfs(x1, y1, sum);
		sum -= tmp;
		map[y][x] = tmp;
	}
}
int main()
{
	int test_case;
	int T;
	cin >> T;


	for (test_case = 1; test_case <= T; ++test_case)
	{
		
		scanf_s("%d", &n);
		min_item = 987654321;
		for (int i = 0; i < n; i++)
			for (int j = 0; j < n; j++)
				scanf_s("%d", &map[i][j]);
		/*for (int i = 0; i < n; i++)
		{
			for (int j = 0; j < n; j++)
				printf("%d ", map[i][j]);
			printf("\n");
		}*/
		dfs(0, 0,0);
		printf("#%d %d\n",test_case,min_item);
	}
	return 0;
}